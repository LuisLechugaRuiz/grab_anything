# Docker Compose file for Gazebo ROS 2 Control
#
# Usage:
#
# To build the images:
#   docker compose build
#
# To start up a specific service by name:
#   docker compose up <name>
#
# To open an interactive shell to a running container:
# (You can tab complete to get the container name)
#   docker exec -it <container_name> bash

services:
  base:
    image: moveit_gazebo
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    privileged: true
    environment:
      # Default the ROS_DOMAIN_ID to zero if not set on the host
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      # Allows graphical programs in the container
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      # Allows graphical programs in the container
      - ../grab_anything:/app/grab_anything
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority

  # Run the Python Motion Planning Tutorial
  # https://moveit.picknik.ai/main/doc/examples/motion_planning_python_api/motion_planning_python_api_tutorial.html
  python_gazebo:
    extends: base
    # command: ros2 launch moveit2_tutorials motion_planning_python_api_tutorial.launch.py ros2_control_hardware_type:=sim_ignition use_sim_time:=true initial_positions_file:=initial_positions_zero.yaml

  python_gazebo_gpu:
    extends: python_gazebo
    command: tail -f /dev/null
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
